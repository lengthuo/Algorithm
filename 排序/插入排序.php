<?php
/**
 * 插入排序不适合对于数据量比较大的排序应用。但是，如果需要排序的数据量很小，比如量级小于千，那么插入排序还是一个不错的选择。
 * 1从第一个元素开始，该元素可以认为已经被排序
 * 2取出下一个元素，在已经排序的元素序列中从后向前扫描
 * 3如果该元素（已排序）大于新元素，将该元素移到下一位置
 * 4重复步骤3，直到找到已排序的元素小于或者等于新元素的位置
 * 5将新元素插入到该位置后
 * 重复步骤2~5
 *
 */

// 分类 ------------- 内部比较排序
// 数据结构 ---------- 数组
// 最差时间复杂度 ---- 最坏情况为输入序列是降序排列的,此时时间复杂度O(n^2)
// 最优时间复杂度 ---- 最好情况为输入序列是升序排列的,此时时间复杂度O(n)
// 平均时间复杂度 ---- O(n^2)
// 所需辅助空间 ------ O(1)
// 稳定性 ------------ 稳定

$s = [9, 1, 2, 8, 3, 7, 100, 24, 21, 2];

$length = count($s);

for ($i = 1; $i < $length; ++$i) {
    $get = $s[$i];     // 右手抓到一张扑克牌
    $j = $i - 1;       // 拿在左手上的牌总是排序好的（j是当前位置）
    while ($j >= 0 && $s[$j] > $get) {   //拿到的牌小于前面的元素
        $s[$j + 1] = $s[$j];            // 如果该手牌比抓到的牌大，就将其右移
        $j--;                           //这个变量就是为了找到这个位置
    }
    $s[$j + 1] = $get; // 直到该手牌比抓到的牌小(或二者相等)，将抓到的牌插入到该手牌右边(相等元素的相对次序未变，所以插入排序是稳定的)
}

print_r($s);
